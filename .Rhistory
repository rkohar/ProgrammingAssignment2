q()
testscript()
testscript.r
xlab("The bottom")
x <- runif(10000)
x <- x * 4
plot(x, xlab="The bottom")
title("A Random Graph")
xlab("The bottom")
rand
rand()
hw1_data <- read.csv("N:/Coursea/R Programming/Quiz 1/hw1_data.csv")
View(hw1_data)
hw1_data(47,)
x <- hw1_data
x(47)
hw1_data[47,]
sum(is.na(hw1_data))
ozone <- hw1_data[1,]
sum(is.na(ozone))
ozone <- hw1_data[,1]
sum(is.na(ozone))
mean(ozone)
meanna(ozone)
meana(ozone)
mean(ozone, na.rm=true)
mean(ozone, na.rm=TRUE)
hw1_data(Ozone > 31)
hw1_data[Ozone > 31]
hw1_data$Ozone
x <- hw_1data[hw_1data[1,] > 31]
ozone <- "ozone"
ozone <- "Ozone"
hw_1data(ozone)
hw_1data[ozone]
hw_1data
hw1_data
hw1_data[ozone]
X <- hw1_data[hw1_data[1,] > 31]
X <- hw1_data[1,] > 31
x
View(x)
View(x)
View(X)
clear x
clear(x)
View(x)
y <- hw1_data[1,] > 31
y
y <- hw1_data[,1] > 31
y <- hw1_data[,hw1_data[,1] > 31]
y <- hw1_data[,1] > 31
z <- hw1_data[y,]
View(z)
View(z)
View(hw1_data)
hw1_data[,5] == 5
hw1_data[hw1_data[,5] == 5]
hw1_data[,hw1_data[,5]==5]
hw1_data$month == 5
(hw1_data$month) == 5
max(hm1_data[1:31,1])
max(hw1_data[1:31,1])
max(hw1_data[1:31,1], is.rm = TRUE)
y <- hw1_data[1:31,1]
max(y)
y<- is.rm(y)
bad <- is.na(y)
y <- y[!bad]
max(y)
y <- hw1_data[4,32:61]
y <- hw1_data[32:61,4]
mean(y)
A <- hw1_data[,1]
A <- A > 31
hw1_data[A]
hw1_data[A,1]
hw1_data[A,]
B <- hw1_data[["Ozone" > 31],]
B <- hw1_data[[hw_1data[,1] > 31],]
B <- hw1_data[,1] > 31
C <- hw1_data[,4] > 90
D <- B + C
hw1_data[D,]
E <-hw1_data[D,]
F <- is.na(E)
E <- E[!F]
E
E <-hw1_data[D,]
E
E[,3]
E[,2]
mean(E[,2], is.rm = TRUE)
G <- E[,2]
G <- G[!is.na(G)]
G
mean(G)
A <- hw1_data
B <- hw1_data[,1]
B <- B > 31
C <- hw1_data[,4]
C <- C > 90
D <- B + C
E <- hw1_data[D]
D
clc
clear
cube <- function(x,n) {}
x^3
cube <- function(x,n){x^3}
cube(#)
cube(#)
cube(#)
cube(#)
cube(3)
X<- 1:10
if (X > 5){x <- 0}
y <- 1:10
y <- 0
f <- function(x) { g <- function(y) {y + z}; z <- 4; x + g(x)}
z <- 10
f(#)
f(3)
x <- 5
y <- if(x < 3){NA}; else{10}
y <- if(x < 3){ NA } else { 10 }
y
hw1_data <- read.csv("N:/Coursea/R Programming/Quiz 1/hw1_data.csv")
View(hw1_data)
summary(hw1_data)
citation()
q()
library(datasets)
data(iris)
?iris
mean('Sepal.Length')
data(iris)
?iris
iris
mean(iris$Sepal.Length)
View(iris)
View(iris)
a <- array(rnorm(2*2*10), c(2,2,10))
apply(a, c(1,2), mean)
rowMeans(a, dims = 2)
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
f
tapply(x, f, mean)
tapply(x, f, mean, simplify = TRUE)
tapply(x, f, mean, simplify = FALSE)
b = tapply(x, f, mean, simplify = FALSE)
b = tapply(x, f, mean, simplify = TRUE)
b
b <- tapply(x, f, mean, simplify = TRUE)
setwd("~/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
A <- c(1, 2, 3, 4, nrow = 2, ncol = 2)
A
A <- c(1, 2, 3, 4, "nrow" = 2, "ncol" = 2)
A
A <- 1:4
dim(A) <- c(2,2)
A
y <- makeCacheMatrix(A)
z <- cacheSolve(A)
source("cachematrix.R")
z <- cacheSolve(A)
z <- cacheSolve(y)
z
